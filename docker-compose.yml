version: '3.7'

services:
  config-server:
    image: docker.devoxxfr.chelonix.org/jcsirot/spring-petclinic-config-server:2.1.3-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 512M
    # ports:
    #  - 8888:8888

  discovery-server:
    image: docker.devoxxfr.chelonix.org/jcsirot/spring-petclinic-discovery-server:2.1.3-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
      - config-server
    entrypoint: ["./dockerize","-wait=tcp://config-server:8888","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    ports:
     - 8761:8761

  customers-service:
    image: docker.devoxxfr.chelonix.org/jcsirot/spring-petclinic-customers-service:2.1.3-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
     - config-server
     - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    # ports:
    # - 8081:8081

  visits-service:
    image: docker.devoxxfr.chelonix.org/jcsirot/spring-petclinic-visits-service:2.1.3-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
     - config-server
     - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    # ports:
    #  - 8082:8082

  vets-service:
    image: docker.devoxxfr.chelonix.org/jcsirot/spring-petclinic-vets-service:2.1.3-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
     - config-server
     - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    # ports:
    #  - 8083:8083

  api-gateway:
    image: docker.devoxxfr.chelonix.org/jcsirot/spring-petclinic-api-gateway:2.1.3-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
     - config-server
     - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    ports:
     - 8080:8080

  tracing-server:
    image: openzipkin/zipkin
    deploy:
      resources:
        limits:
          memory: 512M
    environment:
    - JAVA_OPTS=-Djava.security.egd=file:/dev/./urandom
    # ports:
    #  - 9411:9411

  admin-server:
    image: docker.devoxxfr.chelonix.org/jcsirot/spring-petclinic-admin-server:2.1.3-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
     - config-server
     - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    ports:
     - 9090:9090

  hystrix-dashboard:
    image: docker.devoxxfr.chelonix.org/jcsirot/spring-petclinic-hystrix-dashboard:2.1.3-SNAPSHOT
    deploy:
      resources:
        limits:
          memory: 512M
    depends_on:
     - config-server
     - discovery-server
    entrypoint: ["./dockerize","-wait=tcp://discovery-server:8761","-timeout=60s","--","java", "-XX:+UnlockExperimentalVMOptions", "-XX:+UseCGroupMemoryLimitForHeap", "-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]
    # ports:
    #  - 7979:7979

  ## Grafana / Prometheus

  # grafana-server:
  #   build: ./docker/grafana
  #   container_name: grafana-server
  #   mem_limit: 256M
  #   ports:
  #   - 3000:3000

  # prometheus-server:
  #   build: ./docker/prometheus
  #   container_name: prometheus-server
  #   mem_limit: 256M
  #   ports:
  #   - 9091:9090
